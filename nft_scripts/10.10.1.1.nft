flush ruleset

define ports = {ssh}

table ip  portknock{

        set accessi_default_ipv4 {
                typeof ip saddr
                flags interval
                elements = { 5.158.68.136/29 }
        }

        set knockers_ipv4 {
                type ipv4_addr . inet_service
                flags timeout
        }

        set approvati_ipv4 {
                type ipv4_addr
                flags timeout
        }


        chain input {
        
        # The policy of this filter is 'ACCEPT' so all packets what are not dropped here
        # can be filtered later by lower priority filters (e.g. iptables),
        # SO WARNING !!
        # If 'next-in-priority' filter is using 'DROP' default policy all things 
        # non dropped here will be dropped there ! Keep an eye 

        type filter hook input priority -10; policy accept;

        iifname "lo" return

        tcp dport $ports ct state established,related accept
        tcp dport $ports ip saddr @approvati_ipv4  accept
        tcp dport $ports ip saddr @accessi_default_ipv4  accept
        tcp dport $ports reject with tcp reset

        #
        # Knocking implementation
        #

	udp length 264 @ih,1336,104 0xa86f02edb9a38738fd3bcba2b2 add @knockers_ipv4 {ip saddr . udp sport   timeout 10s}
	udp length 264 @ih,712,120 0x2cb72296fd22d50479840dffd3591d ip saddr . udp dport  @knockers_ipv4 add @knockers_ipv4 {ip saddr . udp sport timeout 10s}
	udp length 264 @ih,896,48 0x4131f3726c70 ip saddr . udp dport  @knockers_ipv4 add @knockers_ipv4 {ip saddr . udp sport timeout 10s}
	udp length 264 @ih,864,104 0x8b373b48aac9df22d15dc9220c ip saddr . udp dport @knockers_ipv4  add @approvati_ipv4 {ip saddr timeout 5m}
     }
}
